{"ast":null,"code":"async function fetchGraphQL(query, preview = false) {\n  return fetch(`https://graphql.contentful.com/content/v1/spaces/${process.env.CONTENTFUL_SPACE_ID}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${preview ? process.env.CONTENTFUL_PREVIEW_ACCESS_TOKEN : process.env.CONTENTFUL_ACCESS_TOKEN}`\n    },\n    body: JSON.stringify({\n      query\n    })\n  }).then(response => response.json());\n}\n\nfunction extractProject(project) {\n  var _project$data, _project$data$project, _project$data$project2;\n\n  return project === null || project === void 0 ? void 0 : (_project$data = project.data) === null || _project$data === void 0 ? void 0 : (_project$data$project = _project$data.projectCollection) === null || _project$data$project === void 0 ? void 0 : (_project$data$project2 = _project$data$project.items) === null || _project$data$project2 === void 0 ? void 0 : _project$data$project2[0];\n}\n\nfunction extractProjectEntries(projects) {\n  var _projects$data, _projects$data$projec;\n\n  return projects === null || projects === void 0 ? void 0 : (_projects$data = projects.data) === null || _projects$data === void 0 ? void 0 : (_projects$data$projec = _projects$data.projectCollection) === null || _projects$data$projec === void 0 ? void 0 : _projects$data$projec.items;\n}\n\nexport async function getProjectBySlug({\n  slug\n}) {\n  const entries = await fetchGraphQL(`query {\n      projectCollection(where: { slug: \"${slug}\" }) {\n        items {\n          title\n          description\n          slug\n          mainImage {\n            url\n            title\n            width\n            height\n          }\n          tags\n          projectInfo\n          technologyUsed\n        }\n      }\n    }`);\n  return extractProject(entries);\n}\nexport async function getAllSlugs() {\n  const entries = await fetchGraphQL(`query {\n      projectCollection {\n        items {\n          slug\n        }\n      }\n    }`);\n  return extractProjectEntries(entries);\n}\nexport async function getAllProjects() {\n  const entries = await fetchGraphQL(`query {\n      projectCollection {\n        items {\n          title\n          slug\n          isPreviewDark\n           imagePreview {\n            url\n            title\n            width\n            height\n          }\n          tags\n        }\n      }\n    }`);\n  return extractProjectEntries(entries);\n}","map":{"version":3,"sources":["/Users/juliosoto/Documents/dev/portfolio-v3/node_modules/@juliosoto/utils/contentful/api.ts"],"names":["fetchGraphQL","query","preview","fetch","process","env","CONTENTFUL_SPACE_ID","method","headers","Authorization","CONTENTFUL_PREVIEW_ACCESS_TOKEN","CONTENTFUL_ACCESS_TOKEN","body","JSON","stringify","then","response","json","extractProject","project","data","projectCollection","items","extractProjectEntries","projects","getProjectBySlug","slug","entries","getAllSlugs","getAllProjects"],"mappings":"AAAA,eAAeA,YAAf,CAA4BC,KAA5B,EAAmCC,OAAO,GAAG,KAA7C,EAAoD;AAClD,SAAOC,KAAK,CACT,oDAAmDC,OAAO,CAACC,GAAR,CAAYC,mBAAoB,EAD1E,EAEV;AACEC,IAAAA,MAAM,EAAE,MADV;AAEEC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAG,UACdP,OAAO,GACHE,OAAO,CAACC,GAAR,CAAYK,+BADT,GAEHN,OAAO,CAACC,GAAR,CAAYM,uBACjB;AANM,KAFX;AAUEC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEb,MAAAA;AAAF,KAAf;AAVR,GAFU,CAAL,CAcLc,IAdK,CAcCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAdd,CAAP;AAeD;;AAED,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AAAA;;AAC/B,SAAOA,OAAP,aAAOA,OAAP,wCAAOA,OAAO,CAAEC,IAAhB,2EAAO,cAAeC,iBAAtB,oFAAO,sBAAkCC,KAAzC,2DAAO,uBAA0C,CAA1C,CAAP;AACD;;AAED,SAASC,qBAAT,CAA+BC,QAA/B,EAAyC;AAAA;;AACvC,SAAOA,QAAP,aAAOA,QAAP,yCAAOA,QAAQ,CAAEJ,IAAjB,4EAAO,eAAgBC,iBAAvB,0DAAO,sBAAmCC,KAA1C;AACD;;AAED,OAAO,eAAeG,gBAAf,CAAgC;AAAEC,EAAAA;AAAF,CAAhC,EAA0C;AAC/C,QAAMC,OAAO,GAAG,MAAM3B,YAAY,CAC/B;AACL,0CAA0C0B,IAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAlBoC,CAAlC;AAqBA,SAAOR,cAAc,CAACS,OAAD,CAArB;AACD;AAED,OAAO,eAAeC,WAAf,GAA6B;AAClC,QAAMD,OAAO,GAAG,MAAM3B,YAAY,CAC/B;AACL;AACA;AACA;AACA;AACA;AACA,MAPoC,CAAlC;AAUA,SAAOuB,qBAAqB,CAACI,OAAD,CAA5B;AACD;AAED,OAAO,eAAeE,cAAf,GAAgC;AACrC,QAAMF,OAAO,GAAG,MAAM3B,YAAY,CAC/B;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAhBoC,CAAlC;AAkBA,SAAOuB,qBAAqB,CAACI,OAAD,CAA5B;AACD","sourcesContent":["async function fetchGraphQL(query, preview = false) {\n  return fetch(\n    `https://graphql.contentful.com/content/v1/spaces/${process.env.CONTENTFUL_SPACE_ID}`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${\n          preview\n            ? process.env.CONTENTFUL_PREVIEW_ACCESS_TOKEN\n            : process.env.CONTENTFUL_ACCESS_TOKEN\n        }`,\n      },\n      body: JSON.stringify({ query }),\n    },\n  ).then((response) => response.json());\n}\n\nfunction extractProject(project) {\n  return project?.data?.projectCollection?.items?.[0];\n}\n\nfunction extractProjectEntries(projects) {\n  return projects?.data?.projectCollection?.items;\n}\n\nexport async function getProjectBySlug({ slug }) {\n  const entries = await fetchGraphQL(\n    `query {\n      projectCollection(where: { slug: \"${slug}\" }) {\n        items {\n          title\n          description\n          slug\n          mainImage {\n            url\n            title\n            width\n            height\n          }\n          tags\n          projectInfo\n          technologyUsed\n        }\n      }\n    }`,\n  );\n\n  return extractProject(entries);\n}\n\nexport async function getAllSlugs() {\n  const entries = await fetchGraphQL(\n    `query {\n      projectCollection {\n        items {\n          slug\n        }\n      }\n    }`,\n  );\n\n  return extractProjectEntries(entries);\n}\n\nexport async function getAllProjects() {\n  const entries = await fetchGraphQL(\n    `query {\n      projectCollection {\n        items {\n          title\n          slug\n          isPreviewDark\n           imagePreview {\n            url\n            title\n            width\n            height\n          }\n          tags\n        }\n      }\n    }`,\n  );\n  return extractProjectEntries(entries);\n}\n"]},"metadata":{},"sourceType":"module"}