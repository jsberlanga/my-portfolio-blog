{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/juliosoto/Documents/dev/portfolio-v3/node_modules/@juliosoto/components/Document/Document.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\n\nfunction setInitialColorMode() {\n  function getInitialColorMode() {\n    const preference = window.localStorage.getItem('theme');\n    const hasSavedPreference = typeof preference === 'string';\n\n    if (hasSavedPreference) {\n      return preference;\n    }\n\n    const mediaQuery = '(prefers-color-scheme: dark)';\n    const mql = window.matchMedia(mediaQuery);\n    const hasSystemPreference = typeof mql.matches === 'boolean';\n\n    if (hasSystemPreference) {\n      return mql.matches ? 'dark' : 'light';\n    } else {\n      return 'light';\n    }\n  }\n\n  const colorMode = getInitialColorMode();\n  const root = document.documentElement;\n  root.style.setProperty('--initial-color-mode', colorMode);\n  if (colorMode === 'dark') document.documentElement.setAttribute('data-theme', 'dark');\n}\n\nconst blockingSetInitialColorMode = `(function() {\n        ${setInitialColorMode.toString()}\n        setInitialColorMode();\n})()\n`;\n\nclass PortfolioDocument extends Document {\n  static async getInitialProps(ctx) {\n    const initialProps = await Document.getInitialProps(ctx);\n    return _objectSpread({}, initialProps);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Html, {\n      lang: \"en\",\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"link\", {\n          href: \"/fonts/fonts.css\",\n          rel: \"stylesheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"icon\",\n          href: \"/favicon.ico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"preconnect\",\n          href: \"https://fonts.gstatic.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          href: \"https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800&display=swap\",\n          rel: \"stylesheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"Description\",\n          content: \"Julio Soto - Portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [/*#__PURE__*/_jsxDEV(\"script\", {\n          dangerouslySetInnerHTML: {\n            __html: blockingSetInitialColorMode\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NextScript, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PortfolioDocument;","map":{"version":3,"sources":["/Users/juliosoto/Documents/dev/portfolio-v3/node_modules/@juliosoto/components/Document/Document.tsx"],"names":["Document","Html","Head","Main","NextScript","setInitialColorMode","getInitialColorMode","preference","window","localStorage","getItem","hasSavedPreference","mediaQuery","mql","matchMedia","hasSystemPreference","matches","colorMode","root","document","documentElement","style","setProperty","setAttribute","blockingSetInitialColorMode","toString","PortfolioDocument","getInitialProps","ctx","initialProps","render","__html"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,IACEC,IADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,UAJF,QAMO,eANP;;AAQA,SAASC,mBAAT,GAA+B;AAC7B,WAASC,mBAAT,GAA+B;AAC7B,UAAMC,UAAU,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAnB;AACA,UAAMC,kBAAkB,GAAG,OAAOJ,UAAP,KAAsB,QAAjD;;AAEA,QAAII,kBAAJ,EAAwB;AACtB,aAAOJ,UAAP;AACD;;AAED,UAAMK,UAAU,GAAG,8BAAnB;AACA,UAAMC,GAAG,GAAGL,MAAM,CAACM,UAAP,CAAkBF,UAAlB,CAAZ;AACA,UAAMG,mBAAmB,GAAG,OAAOF,GAAG,CAACG,OAAX,KAAuB,SAAnD;;AAEA,QAAID,mBAAJ,EAAyB;AACvB,aAAOF,GAAG,CAACG,OAAJ,GAAc,MAAd,GAAuB,OAA9B;AACD,KAFD,MAEO;AACL,aAAO,OAAP;AACD;AACF;;AAED,QAAMC,SAAS,GAAGX,mBAAmB,EAArC;AACA,QAAMY,IAAI,GAAGC,QAAQ,CAACC,eAAtB;AAEAF,EAAAA,IAAI,CAACG,KAAL,CAAWC,WAAX,CAAuB,sBAAvB,EAA+CL,SAA/C;AAEA,MAAIA,SAAS,KAAK,MAAlB,EACEE,QAAQ,CAACC,eAAT,CAAyBG,YAAzB,CAAsC,YAAtC,EAAoD,MAApD;AACH;;AAED,MAAMC,2BAA2B,GAAI;AACrC,UAAUnB,mBAAmB,CAACoB,QAApB,EAA+B;AACzC;AACA;AACA,CAJA;;AAMA,MAAMC,iBAAN,SAAgC1B,QAAhC,CAAyC;AACvC,eAAa2B,eAAb,CAA6BC,GAA7B,EAAmD;AACjD,UAAMC,YAAY,GAAG,MAAM7B,QAAQ,CAAC2B,eAAT,CAAyBC,GAAzB,CAA3B;AACA,6BAAYC,YAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA,8BACE,QAAC,IAAD;AAAA,gCACE;AAAM,UAAA,IAAI,EAAC,kBAAX;AAA8B,UAAA,GAAG,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,GAAG,EAAC,MAAV;AAAiB,UAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAM,UAAA,GAAG,EAAC,YAAV;AAAuB,UAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AACE,UAAA,IAAI,EAAC,8EADP;AAEE,UAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,gBAJF,eAQE;AAAM,UAAA,IAAI,EAAC,aAAX;AAAyB,UAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,gCACE;AACE,UAAA,uBAAuB,EAAE;AACvBC,YAAAA,MAAM,EAAEP;AADe;AAD3B;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AA9BsC;;AAiCzC,eAAeE,iBAAf","sourcesContent":["import Document, {\n  Html,\n  Head,\n  Main,\n  NextScript,\n  DocumentContext,\n} from 'next/document';\n\nfunction setInitialColorMode() {\n  function getInitialColorMode() {\n    const preference = window.localStorage.getItem('theme');\n    const hasSavedPreference = typeof preference === 'string';\n\n    if (hasSavedPreference) {\n      return preference;\n    }\n\n    const mediaQuery = '(prefers-color-scheme: dark)';\n    const mql = window.matchMedia(mediaQuery);\n    const hasSystemPreference = typeof mql.matches === 'boolean';\n\n    if (hasSystemPreference) {\n      return mql.matches ? 'dark' : 'light';\n    } else {\n      return 'light';\n    }\n  }\n\n  const colorMode = getInitialColorMode();\n  const root = document.documentElement;\n\n  root.style.setProperty('--initial-color-mode', colorMode);\n\n  if (colorMode === 'dark')\n    document.documentElement.setAttribute('data-theme', 'dark');\n}\n\nconst blockingSetInitialColorMode = `(function() {\n        ${setInitialColorMode.toString()}\n        setInitialColorMode();\n})()\n`;\n\nclass PortfolioDocument extends Document {\n  static async getInitialProps(ctx: DocumentContext) {\n    const initialProps = await Document.getInitialProps(ctx);\n    return { ...initialProps };\n  }\n\n  render() {\n    return (\n      <Html lang=\"en\">\n        <Head>\n          <link href=\"/fonts/fonts.css\" rel=\"stylesheet\" />\n          <link rel=\"icon\" href=\"/favicon.ico\" />\n          <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n          <link\n            href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800&display=swap\"\n            rel=\"stylesheet\"\n          />\n          <meta name=\"Description\" content=\"Julio Soto - Portfolio\"></meta>\n        </Head>\n        <body>\n          <script\n            dangerouslySetInnerHTML={{\n              __html: blockingSetInitialColorMode,\n            }}\n          ></script>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    );\n  }\n}\n\nexport default PortfolioDocument;\n"]},"metadata":{},"sourceType":"module"}